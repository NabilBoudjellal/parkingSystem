memberSearchIndex = [{"p":"com.parkit.parkingsystem.unitTests.service","c":"FareCalculatorServiceTest","l":"calculateFareBike()"},{"p":"com.parkit.parkingsystem.unitTests.service","c":"FareCalculatorServiceTest","l":"calculateFareBikeForRegularCostumer()"},{"p":"com.parkit.parkingsystem.unitTests.service","c":"FareCalculatorServiceTest","l":"calculateFareBikeWithFutureInTime()"},{"p":"com.parkit.parkingsystem.unitTests.service","c":"FareCalculatorServiceTest","l":"calculateFareBikeWithLessThanHalfOfHourParkingTime()"},{"p":"com.parkit.parkingsystem.unitTests.service","c":"FareCalculatorServiceTest","l":"calculateFareBikeWithLessThanOneHourParkingTime()"},{"p":"com.parkit.parkingsystem.unitTests.service","c":"FareCalculatorServiceTest","l":"calculateFareCar()"},{"p":"com.parkit.parkingsystem.unitTests.service","c":"FareCalculatorServiceTest","l":"calculateFareCarForRegularCostumer()"},{"p":"com.parkit.parkingsystem.unitTests.service","c":"FareCalculatorServiceTest","l":"calculateFareCarWithLessThanHalfOfHourParkingTime()"},{"p":"com.parkit.parkingsystem.unitTests.service","c":"FareCalculatorServiceTest","l":"calculateFareCarWithLessThanOneHourParkingTime()"},{"p":"com.parkit.parkingsystem.unitTests.service","c":"FareCalculatorServiceTest","l":"calculateFareCarWithMoreThanADayParkingTime()"},{"p":"com.parkit.parkingsystem.unitTests.service","c":"FareCalculatorServiceTest","l":"calculateFareUnknownType()"},{"p":"com.parkit.parkingsystem.integration.config","c":"DataBasePrepareService","l":"calculateTheNumberOfTicketSavedInTheDB()"},{"p":"com.parkit.parkingsystem.integration.daoIT","c":"TicketDaoIT","l":"CheckIfRegNumberIsInTheParkingFalseTest()"},{"p":"com.parkit.parkingsystem.integration.daoIT","c":"TicketDaoIT","l":"CheckIfRegNumberIsInTheParkingTrueTest()"},{"p":"com.parkit.parkingsystem.integration.daoIT","c":"TicketDaoIT","l":"CheckIfRegularCustomerFalseTest()"},{"p":"com.parkit.parkingsystem.integration.daoIT","c":"TicketDaoIT","l":"CheckIfRegularCustomerTrueTest()"},{"p":"com.parkit.parkingsystem.integration.config","c":"DataBasePrepareService","l":"checkIfThisSpotIsAvailable(int)"},{"p":"com.parkit.parkingsystem.integration.config","c":"DataBasePrepareService","l":"clearDataBaseEntries()"},{"p":"com.parkit.parkingsystem.integration.config","c":"DataBaseTestConfig","l":"closeConnection(Connection)","u":"closeConnection(java.sql.Connection)"},{"p":"com.parkit.parkingsystem.integration.config","c":"DataBaseTestConfig","l":"closePreparedStatement(PreparedStatement)","u":"closePreparedStatement(java.sql.PreparedStatement)"},{"p":"com.parkit.parkingsystem.integration.config","c":"DataBaseTestConfig","l":"closeResultSet(ResultSet)","u":"closeResultSet(java.sql.ResultSet)"},{"p":"com.parkit.parkingsystem.integration.config","c":"DataBasePrepareService","l":"DataBasePrepareService()","u":"%3Cinit%3E()"},{"p":"com.parkit.parkingsystem.integration.config","c":"DataBaseTestConfig","l":"DataBaseTestConfig()","u":"%3Cinit%3E()"},{"p":"com.parkit.parkingsystem.unitTests.service","c":"ParkingServiceTest","l":"failInUpdatingTicket()"},{"p":"com.parkit.parkingsystem.unitTests.service","c":"FareCalculatorServiceTest","l":"FareCalculatorServiceTest()","u":"%3Cinit%3E()"},{"p":"com.parkit.parkingsystem.integration.config","c":"DataBaseTestConfig","l":"getConnection()"},{"p":"com.parkit.parkingsystem.integration.config","c":"DataBasePrepareService","l":"getFareToCheckIt()"},{"p":"com.parkit.parkingsystem.unitTests.modelTests","c":"ParkingSpotTest","l":"getIdTest()"},{"p":"com.parkit.parkingsystem.unitTests.modelTests","c":"TicketTest","l":"getIdTest()"},{"p":"com.parkit.parkingsystem.unitTests.modelTests","c":"TicketTest","l":"getInTimeTest()"},{"p":"com.parkit.parkingsystem.unitTests.modelTests","c":"ParkingSpotTest","l":"getIsAvailableTest()"},{"p":"com.parkit.parkingsystem.integration.config","c":"DataBasePrepareService","l":"getOutDateToCheckIt()"},{"p":"com.parkit.parkingsystem.unitTests.modelTests","c":"TicketTest","l":"getOutTimeTest()"},{"p":"com.parkit.parkingsystem.unitTests.modelTests","c":"TicketTest","l":"getParkingSpotTest()"},{"p":"com.parkit.parkingsystem.unitTests.modelTests","c":"ParkingSpotTest","l":"getParkingTypeTest()"},{"p":"com.parkit.parkingsystem.unitTests.modelTests","c":"TicketTest","l":"getPriceTest()"},{"p":"com.parkit.parkingsystem.unitTests.modelTests","c":"TicketTest","l":"getVehicleRegNumberTest()"},{"p":"com.parkit.parkingsystem.integration.config","c":"DataBasePrepareService","l":"insertTestLineForCheckIfRegNumberIsInTheParking(String)","u":"insertTestLineForCheckIfRegNumberIsInTheParking(java.lang.String)"},{"p":"com.parkit.parkingsystem.integration.config","c":"DataBasePrepareService","l":"insertTestLineForCheckIfRegularCustomer(String)","u":"insertTestLineForCheckIfRegularCustomer(java.lang.String)"},{"p":"com.parkit.parkingsystem.unitTests.service","c":"ParkingServiceTest","l":"nonRegularCustomerIncomingVehicleTest()"},{"p":"com.parkit.parkingsystem.integration.serviceIT","c":"ParkingDataBaseIT","l":"ParkingDataBaseIT()","u":"%3Cinit%3E()"},{"p":"com.parkit.parkingsystem.unitTests.service","c":"ParkingServiceTest","l":"ParkingServiceTest()","u":"%3Cinit%3E()"},{"p":"com.parkit.parkingsystem.integration.daoIT","c":"ParkingSpotDaoIT","l":"ParkingSpotDaoIT()","u":"%3Cinit%3E()"},{"p":"com.parkit.parkingsystem.unitTests.modelTests","c":"ParkingSpotTest","l":"ParkingSpotTest()","u":"%3Cinit%3E()"},{"p":"com.parkit.parkingsystem.unitTests.service","c":"ParkingServiceTest","l":"processExitingVehicleTest()"},{"p":"com.parkit.parkingsystem.integration.config","c":"DataBasePrepareService","l":"putAllParkingSpotsNotAvailable()"},{"p":"com.parkit.parkingsystem.unitTests.service","c":"ParkingServiceTest","l":"regularCustomerIncomingVehicleTest()"},{"p":"com.parkit.parkingsystem.integration.daoIT","c":"TicketDaoIT","l":"saveUpdateParkingTest()"},{"p":"com.parkit.parkingsystem.integration.daoIT","c":"ParkingSpotDaoIT","l":"test_When_NoBikeParkingSpot_IsAvailable()"},{"p":"com.parkit.parkingsystem.integration.daoIT","c":"ParkingSpotDaoIT","l":"test_When_NoCarParkingSpot_IsAvailable()"},{"p":"com.parkit.parkingsystem.integration.serviceIT","c":"ParkingDataBaseIT","l":"testParkingACar()"},{"p":"com.parkit.parkingsystem.integration.serviceIT","c":"ParkingDataBaseIT","l":"testParkingLotExit()"},{"p":"com.parkit.parkingsystem.integration.daoIT","c":"TicketDaoIT","l":"TicketDaoIT()","u":"%3Cinit%3E()"},{"p":"com.parkit.parkingsystem.unitTests.modelTests","c":"TicketTest","l":"TicketTest()","u":"%3Cinit%3E()"},{"p":"com.parkit.parkingsystem.unitTests.service","c":"ParkingServiceTest","l":"tryToGetAVehicleOutThatIsNotInTheParkingLot()"},{"p":"com.parkit.parkingsystem.integration.daoIT","c":"ParkingSpotDaoIT","l":"updateParkingBikeInTableTest()"},{"p":"com.parkit.parkingsystem.integration.daoIT","c":"ParkingSpotDaoIT","l":"updateParkingCarInTableTest()"},{"p":"com.parkit.parkingsystem.integration.daoIT","c":"TicketDaoIT","l":"updateTicketFalseTest()"},{"p":"com.parkit.parkingsystem.integration.daoIT","c":"TicketDaoIT","l":"updateTicketTrueTest()"},{"p":"com.parkit.parkingsystem.unitTests.service","c":"ParkingServiceTest","l":"vehicleEntryAlreadyInTheParking()"}];updateSearchResults();